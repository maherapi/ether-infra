{{- if and .Values.istio.enabled .Values.istio.virtualService.enabled }}
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: {{ include "ethereum-infrastructure.fullname" . }}-rpc
  labels:
    {{- include "ethereum-infrastructure.labels" . | nindent 4 }}
spec:
  hosts:
  {{- toYaml .Values.istio.virtualService.hosts | nindent 2 }}
  gateways:
  {{- toYaml .Values.istio.virtualService.gateways | nindent 2 }}
  http:
  {{- range .Values.istio.virtualService.http }}
  - match:
    {{- toYaml .match | nindent 4 }}
    route:
    - destination:
        host: {{ include "ethereum-infrastructure.serveNodeName" $ }}
        port:
          number: {{ $.Values.serveNodes.service.port }}
      weight: 100
    {{- if .fault }}
    fault:
      {{- toYaml .fault | nindent 6 }}
    {{- end }}
    {{- if .retries }}
    retries:
      {{- toYaml .retries | nindent 6 }}
    {{- end }}
    {{- if .timeout }}
    timeout: {{ .timeout }}
    {{- end }}
    corsPolicy:
      allowOrigins:
      - exact: "*"
      allowMethods:
      - GET
      - POST
      - OPTIONS
      allowHeaders:
      - content-type
      - authorization
      - x-requested-with
      maxAge: "24h"
  {{- end }}
  # Health check endpoint
  - match:
    - uri:
        exact: "/health"
    route:
    - destination:
        host: {{ include "ethereum-infrastructure.serveNodeName" . }}
        port:
          number: {{ .Values.serveNodes.service.port }}
    timeout: 10s
  # Metrics endpoint (for monitoring)
  - match:
    - uri:
        prefix: "/metrics"
    route:
    - destination:
        host: {{ include "ethereum-infrastructure.serveNodeName" . }}
        port:
          number: 6060
    timeout: 30s
{{- end }}
