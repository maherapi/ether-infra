# Root Helmfile - Orchestrates all infrastructure components
# This file manages the deployment order and dependencies between components

environments:
  local:
    values:
      - environments/local.yaml
  staging:
    values:
      - environments/staging.yaml
  production:
    values:
      - environments/production.yaml

---
# Infrastructure Foundation - Must be deployed first
helmfiles:
  # Phase 1A: Foundation (Dependencies)
  - path: helmfiles/infrastructure.helmfile.yaml
    selectors:
      - name=infrastructure
    values:
      - environment: "{{ .Environment.Name }}"

  - path: helmfiles/local-registry.helmfile.yaml
    selectors:
      - name=local-registry
    values:
      - environment: "{{ .Environment.Name }}"
    needs:
      - helmfiles/infrastructure.helmfile.yaml

  - path: helmfiles/istio.helmfile.yaml
    selectors:
      - name=istio
    values:
      - environment: "{{ .Environment.Name }}"
    needs:
      - helmfiles/infrastructure.helmfile.yaml

  # Phase 1B: Observability
  - path: helmfiles/observability.helmfile.yaml
    selectors:
      - name=observability
    values:
      - environment: "{{ .Environment.Name }}"
    needs:
      - helmfiles/infrastructure.helmfile.yaml
      - helmfiles/istio.helmfile.yaml

  # Phase 1C: Ethereum Infrastructure
  - path: helmfiles/ethereum.helmfile.yaml
    selectors:
      - name=ethereum
    values:
      - environment: "{{ .Environment.Name }}"
    needs:
      - helmfiles/infrastructure.helmfile.yaml
      - helmfiles/local-registry.helmfile.yaml
      - helmfiles/istio.helmfile.yaml
      - helmfiles/observability.helmfile.yaml

templates:
  # Common values available to all helmfiles
  default: &default
    missingFileHandler: Warn
    values:
      - global:
          environment: "{{ .Environment.Name }}"
          namespace:
            ethereum: "ethereum-{{ .Environment.Name }}"
            infrastructure: "infrastructure-{{ .Environment.Name }}"
            observability: "observability-{{ .Environment.Name }}"
            istio: "istio-system"
            registry: "registry-{{ .Environment.Name }}"

helmDefaults:
  <<: *default
  createNamespace: true
  wait: true
  timeout: 600
  atomic: true
  cleanupOnFail: true
